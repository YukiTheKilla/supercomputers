MPI_Comm_rank - получение ранга
MPI_Comm_size - кол во доступных процессов в коммуникаторе
MPI_Scatter - деление на части и отправка от ранка 0 всем остальным
MPI_Reduce - возврат данных от всех к процессу 0
MPI_Barrier - синхронизация всех процессов в заданном коммутаторе
MPI_Finalize - завершение всех процессов
MPI_Send - отправка от одного ранка другому
MPI_Recv - принятие данных от одного ранка другому
MPI_Bcast - один процесс может отправить данные всем остальным процессам в группе, при этом все процессы получат одинаковую копию данных.
MPI_Abort - завершение всех процессов как ошибкой
MPI_Comm_split - деление коммутатора на подгруппы
MPI_Cart_create - создание сеточной топологии
MPI_Cart_coords - получения корд процесса в сеточной топологии
MPI_Sendrecv_replace- используется для обмена данными между двумя процессами, при этом данные, которые отправляются, могут быть замещены полученными данными. 
MPI_Gather - сбора данных с всех процессов в одном процессе
MPI_Comm_free - спользуется в MPI для освобождения (удаления) коммуникатора. 
MPI_Ssend - отправитель не продолжит выполнение, пока получатель не начнет принимать данные
MPI_Rsend - перед отправкой данных данные должны быть готовы для получения на стороне получателя
MPI_Bsend - отправлять данные в асинхронном режиме, при этом MPI использует заранее выделенный пользователем буфер для хранения данных до тех пор, пока они не будут приняты получателем.
MPI_Buffer_detach - освобождения буфера, который был предварительно выделен с помощью функции MPI_Buffer_attach
MPI_Init - инициализации библиотеки MPI в процессе перед его использованием
MPI_Isend - используется для неглобальной (асинхронной) отправки сообщений. Это отправка данных, которая не блокирует выполнение процесса, отправляющего сообщение
MPI_Irecv - используется для неглобальной (асинхронной) операции получения сообщений
MPI_Waitall -